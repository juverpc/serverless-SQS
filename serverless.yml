service: second-test

frameworkVersion: "2"

provider:
  name: aws
  runtime: python3.6
  eventBridge.useCloudFormation: true
  lambdaHashingVersion: 20201221
  iam:
    role: arn:aws:iam::624733648801:role/Role-serverless-function
  deploymentBucket:
    name: codebuildjuver
    serverSideEncryption: AES256
  #deploymentPrefix: serverless/example
#   ecr:
#     # In this section you can define images that will be built locally and uploaded to ECR
#     scanOnPush: true
#     images:
#       lambda-01-images:
#         path: ./lambda/lambda01
#         file: Dockerfile  
#         buildArgs:
#           AWS_DEFAULT_REGION: ${self:provider.region}
#           AWS_CONTAINER_CREDENTIALS_RELATIVE_URI: ${env:AWS_CONTAINER_CREDENTIALS_RELATIVE_URI}
#       # lambda-02-images:
#       #   path: ./lambda/lambda02
#       #   file: Dockerfile  
#       #   buildArgs:
#       #     AWS_DEFAULT_REGION: ${self:provider.region}
#       #     AWS_CONTAINER_CREDENTIALS_RELATIVE_URI: ${env:AWS_CONTAINER_CREDENTIALS_RELATIVE_URI}
      
         

# plugins:
#   - serverless-deployment-bucket


# functions:
#   lambda-01:
#     image:
#       name: lambda-01-images
#       command:
#         - lambda_function.lambda_handler
    # events:
    #   - eventBridge:
    #       schedule: cron(*/10 8-23 * * ? *)
    #       Description: serverless test lambda-01

  # lambda-02:
  #   image:
  #     name: lambda-02-images
  #     command:
  #       - lambda_function.lambda_handler
  #   events:
  #     - eventBridge:
  #         schedule: cron(*/10 8-23 * * ? *)
  #         Description: serverless test lambda-02

resources:
  Resources:
    ruletestserverless:
      Type: AWS::Events::Rule
      Properties:
        EventBusName: 'default'
        RoleArn: 'arn:aws:iam::624733648801:role/service-role/AmazonSageMakerServiceCatalogProductsUseRole'
        State: 'ENABLED'
        EventPattern:
          source:
            - aws.s3
          detail: 
            eventName: 
              - "PutObject"
            requestParameters:
              bucketName: 
                - 'juver-upload-to-s3' #juver-upload-to-s3/model1/2/
        Targets:
            - 
              Arn: 'arn:aws:codepipeline:us-east-1:624733648801:TestAmplifyPipeline'
              Id: 'Id1234'
              #RoleArn: 'arn:aws:iam::624733648801:role/service-role/AmazonSageMakerServiceCatalogProductsUseRole'
    
