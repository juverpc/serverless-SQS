service: second-test

frameworkVersion: "2"

provider:
  name: aws
  runtime: python3.6
  lambdaHashingVersion: 20201221
  iam:
    role: arn:aws:iam::624733648801:role/Role-serverless-function
  deploymentBucket:
    name: codebuildjuver
    serverSideEncryption: AES256
  #deploymentPrefix: serverless/example
  ecr:
    # In this section you can define images that will be built locally and uploaded to ECR
    scanOnPush: true
    images:
      lambda-01-image:
        path: ./lambda/lambda01
        file: Dockerfile  
        buildArgs:
          AWS_DEFAULT_REGION: ${self:provider.region}
          AWS_CONTAINER_CREDENTIALS_RELATIVE_URI: ${env:AWS_CONTAINER_CREDENTIALS_RELATIVE_URI}
      lambda-02-image:
        path: ./lambda/lambda02
        file: Dockerfile  
        buildArgs:
          AWS_DEFAULT_REGION: ${self:provider.region}
          AWS_CONTAINER_CREDENTIALS_RELATIVE_URI: ${env:AWS_CONTAINER_CREDENTIALS_RELATIVE_URI}
      
         

plugins:
  - serverless-deployment-bucket


functions:
  lambda-01:
    image:
      name: lambda-01-image
      command:
        - lambda_function.lambda_handler
    events:
      - schedule: 
          name: eventcron1
          rate: cron(1 * * * *)

    #   - eventBridge:
    #       eventBus: arn:aws:events:us-east-1:624733648801:event-bus/default
    #       schedule: cron(0 12 * * ? *)
  lambda-02:
    image:
      name: lambda-02-image
      command:
        - lambda_function.lambda_handler
    events:
      - schedule: 
          name: eventcron2
          rate: cron(1 * * * *)
      # - eventBridge:
      #     eventBus: arn:aws:events:us-east-1:624733648801:event-bus/default
      #     schedule: cron(0 12 * * ? *)
